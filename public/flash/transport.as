package {	import flash.net.*;	import flash.events.*;	import flash.utils.setTimeout;		public class transport {		var request:URLRequest;		var loader:URLLoader;				// Callbacks		public var onComplete = function(data){}				public var interval = false;				public function transport(url) {			request = new URLRequest();				request.url = url;				request.method = URLRequestMethod.GET;							loader = new URLLoader();				loader.dataFormat = URLLoaderDataFormat.TEXT;  				loader.addEventListener(Event.COMPLETE, loaderCompleteHandler);				loader.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);				loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);				loader.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);		}				public function run() {			load();		}				private function nextCycle(delay) {					}				public function load() {			loader.load(request);		}				private function loaderCompleteHandler(e:Event):void		{			trace("loaderCompleteHandler: " + e);  		var data = JSON.parse(e.target.data);  		trace('Likes: ' + e.target.data);			onComplete(data);			if(interval) { setTimeout(run, interval) }		}				private function httpStatusHandler (e:Event):void		{		  trace("httpStatusHandler:" + e);		}		private function securityErrorHandler (e:Event):void		{		  trace("securityErrorHandler:" + e);		}				private function ioErrorHandler(e:Event):void		{		  trace("ioErrorHandler: " + e);		  run();		}			}  	}